{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,C,C,E,O,A,S,C,E,G,M,O,C,G,O,C,E,I,A,S,C,C,C,E,I,E,E,E,A,M,E,K,A,a,O,Q,C,C,O,Q,C,E,C,C,a,C,G,A,M,G,I,E,E,C,E,C,E,E,C,E,G,C,I,E,E,I,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,C,G,E,M,G,G,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,E,E,I,E,E,I,A,W,M,A,U,6I,G,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,IAAM,EAAS,SAAS,aAAa,CAAC,kCAChC,EAAQ,SAAS,aAAa,CAAC,0BAC/B,EAAU,SAAS,aAAa,CAAC,4BAEnC,EAAe,EACb,EAAa,EAAE,CAEjB,EAAA,EAAA,EAAA,GADC,EACD,CAAA,CAAA,EAAA,CADa,EACb,CAAA,CAAA,EAAA,CAD6B,EAC7B,CAAA,CAAA,EAAA,CAD6C,EAC7C,CAAA,CAAA,EAAA,CADuD,EACvD,CADJ,CAAA,EAAA,CAGM,EAAe,SAAC,CAAA,CAAO,CAA7B,EACE,IAAI,EAGF,EADE,AAAgB,IAAhB,GAAqB,AAAU,IAAV,EACL,EAAS,CAAA,EAAa,CAAA,EAAY,EAC1C,AAAgB,IAAhB,GAAqB,GAAS,GACpC,AAAgB,IAAhB,GAAqB,GAAS,EAEhB,EAAK,CAAA,EAAa,CAAA,EAAY,EAE9B,EAAS,CAAA,EAAa,CAAA,EAG1C,EAAO,KAAK,CAAC,SAAS,CAAG,eAA+B,MAAA,CAAhB,EAAgB,MAC1D,EAEM,EAAmB,SAAC,CAAA,CAAa,CAAvC,EACE,OAAQ,GACN,KAAK,EACF,EAAG,EAAQ,QAAQ,EAAE,OAAO,CAAC,SAAA,CAA7B,EAAqC,OAAA,EAAI,KAAK,CAAC,OAAO,CAAG,O,GAC1D,KACF,MAAK,EACC,EAAe,EACjB,EAAQ,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAG,QAChC,EAAe,GACxB,CAAA,EAAQ,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAG,MADpC,EAGP,KACF,MAAK,EACkB,IAAjB,GACF,EAAI,EAAQ,QAAQ,EACjB,KAAK,CAAC,IAAI,OAAO,CAAC,SAAA,CAFvB,EAE+B,OAAA,EAAI,KAAK,CAAC,OAAO,CAAG,M,EAGvD,CACF,EAEM,EAAS,WACb,I,EAAM,EAAgB,EAAG,EAAQ,QAAQ,EAAE,MAAM,CAAC,SAAC,CAAA,CAAO,CAA1D,EACE,MAAO,AAA4C,UAA5C,OAAO,gBAAgB,CAAC,GAAQ,OAAO,CAC1C,EAAQ,EACR,CACN,EAAG,GAEC,GAAU,IACZ,EAAW,MAAM,CACf,EACA,EACA,EAAM,WAAW,CACjB,EAAO,WAAW,CAAG,EAAM,WAAW,CACtC,KAAK,KAAK,CAAC,EAAO,WAAW,CAAG,EAAM,WAAW,EACjD,SAAS,OAAO,gBAAgB,CAAC,GAAQ,GAAG,EAC5C,GAGD,EAAA,AACG,CAAA,EAAA,EAAA,EAAA,EAAA,CADH,CAAA,EAAA,CAAY,EAAA,CAAA,CAAA,EAAA,CAAgB,EAAA,CAAA,CAAA,EAAA,CAAgB,EAAA,CAAA,CAAA,EAAA,CAAU,EACnD,CAAA,CAAA,EAAA,CACJ,EAAa,EAAc,GAC3B,EAAiB,EAAgB,GAErC,EAEA,IAEC,EAAG,EAAQ,QAAQ,EAAE,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAtC,EACC,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAO,KAAK,CAAC,UAAU,CAAG,gBAC1B,EAAe,EACf,EAAa,EAAO,EACtB,EACF,GAEA,OAAO,gBAAgB,CAAC,SAAU","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar slider = document.querySelector(\".galary__slider--img-container\");\nvar slide = document.querySelector(\".galary__slider--photo\");\nvar buttons = document.querySelector(\".galary__slider--buttons\");\nvar currentIndex = 0;\nvar sliderData = [];\nvar _sliderData = _sliced_to_array(sliderData, 5), slideWidth = _sliderData[0], translateValue = _sliderData[1], slidesOfScreen = _sliderData[2], gapValue = _sliderData[3], visibleButtons = _sliderData[4];\nvar getTranslate = function(index, slidesCount) {\n    var translateXValue;\n    if (slidesCount === 1 && index === 3) translateXValue = index * (slideWidth + gapValue) - translateValue;\n    else if (slidesCount === 2 && index >= 2 || slidesCount === 3 && index >= 1) translateXValue = 3 * (slideWidth + gapValue) - translateValue;\n    else translateXValue = index * (slideWidth + gapValue);\n    slider.style.transform = \"translateX(-\".concat(translateXValue, \"px)\");\n};\nvar getSliderButtons = function(slidesCount, buttonsCount) {\n    switch(slidesCount){\n        case 1:\n            _to_consumable_array(buttons.children).forEach(function(btn) {\n                return btn.style.display = \"block\";\n            });\n            break;\n        case 2:\n            if (buttonsCount < 3) buttons.lastElementChild.style.display = \"block\";\n            else if (buttonsCount > 3) buttons.lastElementChild.style.display = \"none\";\n            break;\n        case 3:\n            if (buttonsCount !== 2) _to_consumable_array(buttons.children).slice(-2).forEach(function(btn) {\n                return btn.style.display = \"none\";\n            });\n            break;\n    }\n};\nvar resize = function() {\n    var buttonsCount = _to_consumable_array(buttons.children).reduce(function(count, button) {\n        return window.getComputedStyle(button).display === \"block\" ? count + 1 : count;\n    }, 0);\n    if (slider && slide) {\n        sliderData.splice(0, 5, slide.clientWidth, slider.clientWidth - slide.clientWidth, Math.floor(slider.clientWidth / slide.clientWidth), parseInt(window.getComputedStyle(slider).gap), buttonsCount);\n        var ref;\n        ref = _sliced_to_array(sliderData, 5), slideWidth = ref[0], translateValue = ref[1], slidesOfScreen = ref[2], gapValue = ref[3], visibleButtons = ref[4], ref;\n        getTranslate(currentIndex, slidesOfScreen);\n        getSliderButtons(slidesOfScreen, visibleButtons);\n    }\n};\nresize();\n_to_consumable_array(buttons.children).forEach(function(button, index) {\n    button.addEventListener(\"click\", function() {\n        slider.style.transition = \"transform .5s\";\n        currentIndex = index;\n        getTranslate(index, slidesOfScreen);\n    });\n});\nwindow.addEventListener(\"resize\", resize);\n\n//# sourceMappingURL=index.f3ffae82.js.map\n","'use strict';\n\nconst slider = document.querySelector('.galary__slider--img-container');\nconst slide = document.querySelector('.galary__slider--photo');\nconst buttons = document.querySelector('.galary__slider--buttons');\n\nlet currentIndex = 0;\nconst sliderData = [];\nlet [slideWidth, translateValue, slidesOfScreen, gapValue, visibleButtons]\n  = sliderData;\n\nconst getTranslate = (index, slidesCount) => {\n  let translateXValue;\n\n  if (slidesCount === 1 && index === 3) {\n    translateXValue = index * (slideWidth + gapValue) - translateValue;\n  } else if ((slidesCount === 2 && index >= 2)\n    || (slidesCount === 3 && index >= 1)\n  ) {\n    translateXValue = 3 * (slideWidth + gapValue) - translateValue;\n  } else {\n    translateXValue = index * (slideWidth + gapValue);\n  }\n\n  slider.style.transform = `translateX(-${translateXValue}px)`;\n};\n\nconst getSliderButtons = (slidesCount, buttonsCount) => {\n  switch (slidesCount) {\n    case 1:\n      [...buttons.children].forEach(btn => (btn.style.display = 'block'));\n      break;\n    case 2:\n      if (buttonsCount < 3) {\n        buttons.lastElementChild.style.display = 'block';\n      } else if (buttonsCount > 3) {\n        buttons.lastElementChild.style.display = 'none';\n      }\n      break;\n    case 3:\n      if (buttonsCount !== 2) {\n        [...buttons.children]\n          .slice(-2).forEach(btn => (btn.style.display = 'none'));\n      }\n      break;\n  }\n};\n\nconst resize = () => {\n  const buttonsCount = [...buttons.children].reduce((count, button) => {\n    return window.getComputedStyle(button).display === 'block'\n      ? count + 1\n      : count;\n  }, 0);\n\n  if (slider && slide) {\n    sliderData.splice(\n      0,\n      5,\n      slide.clientWidth,\n      slider.clientWidth - slide.clientWidth,\n      Math.floor(slider.clientWidth / slide.clientWidth),\n      parseInt(window.getComputedStyle(slider).gap),\n      buttonsCount,\n    );\n\n    [slideWidth, translateValue, slidesOfScreen, gapValue, visibleButtons]\n      = sliderData;\n    getTranslate(currentIndex, slidesOfScreen);\n    getSliderButtons(slidesOfScreen, visibleButtons);\n  }\n};\n\nresize();\n\n[...buttons.children].forEach((button, index) => {\n  button.addEventListener('click', () => {\n    slider.style.transition = 'transform .5s';\n    currentIndex = index;\n    getTranslate(index, slidesOfScreen);\n  });\n});\n\nwindow.addEventListener('resize', resize);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_sliced_to_array","_array_with_holes","isArray","_iterable_to_array_limit","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","push","value","err","_unsupported_iterable_to_array","_non_iterable_rest","TypeError","_to_consumable_array","_array_without_holes","_iterable_to_array","iter","from","_non_iterable_spread","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","slider","document","querySelector","slide","buttons","currentIndex","sliderData","_sliderData","slideWidth","translateValue","slidesOfScreen","gapValue","visibleButtons","getTranslate","index","slidesCount","translateXValue","style","transform","concat","getSliderButtons","buttonsCount","children","forEach","btn","display","lastElementChild","resize","ref","reduce","count","button","window","getComputedStyle","splice","clientWidth","Math","floor","parseInt","gap","addEventListener","transition"],"version":3,"file":"index.f3ffae82.js.map"}